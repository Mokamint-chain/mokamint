# In order to create the image, from the top level of the module, either
#   mvn package
# or
#   docker buildx build --platform linux/amd64 -t mokamint/mokamint:latest -f src/main/docker/mokamint .
#   add --push to push to DockerHub

FROM openjdk:21-jdk-slim
LABEL "maintainer"="fausto.spoto@mokamint.io"

USER root
WORKDIR /usr/local/bin
    
# install missing packages
RUN apt-get update \
  && apt-get install -y python3 tree vim \
  && rm -rf /var/lib/apt/lists/*

# create mokamint user
RUN groupadd -r mokamint \
  && useradd --no-log-init -r -m -g mokamint mokamint

# copy the Java modules
COPY modules/ /modules/

# install CLI's
RUN echo "#!/bin/bash" > mokamint-application \
	&& echo "#!/bin/bash" > mokamint-application-print-logs \
	&& echo "#!/bin/bash" > mokamint-miner \
	&& echo "#!/bin/bash" > mokamint-miner-print-logs \
	&& echo "#!/bin/bash" > mokamint-node \
	&& echo "#!/bin/bash" > mokamint-node-print-logs \
	&& echo "#!/bin/bash" > mokamint-plotter \
	&& echo "#!/bin/bash" > mokamint-plotter-print-logs

# add /home/mokamint to the classpath in order to find the logging properties file that prints logs on the screen:
# that will replace the logging properties file embedded in the jars
RUN echo java -Djava.util.logging.config.file=logging.properties --module-path /modules/explicit_or_automatic --class-path \"/home/mokamint/:/modules/unnamed/*\" --module io.mokamint.application.cli/io.mokamint.application.cli.MokamintApplication \"\$@\" >> mokamint-application-print-logs \
  && chmod a+x mokamint-application-print-logs \
  && echo java --module-path /modules/explicit_or_automatic --class-path \"/modules/unnamed/*\" --module io.mokamint.application.cli/io.mokamint.application.cli.MokamintApplication \"\$@\" >> mokamint-application \
  && chmod a+x mokamint-application \
  && echo java -Djava.util.logging.config.file=logging.properties --module-path /modules/explicit_or_automatic --class-path \"/home/mokamint/:/modules/unnamed/*\" --module io.mokamint.miner.cli/io.mokamint.miner.cli.MokamintMiner \"\$@\" >> mokamint-miner-print-logs \
  && chmod a+x mokamint-miner-print-logs \
  && echo java --module-path /modules/explicit_or_automatic --class-path \"/modules/unnamed/*\" --module io.mokamint.miner.cli/io.mokamint.miner.cli.MokamintMiner \"\$@\" >> mokamint-miner \
  && chmod a+x mokamint-miner \
  && echo java -Djava.util.logging.config.file=logging.properties --module-path /modules/explicit_or_automatic --class-path \"/home/mokamint/:/modules/unnamed/*\" --module io.mokamint.node.cli/io.mokamint.node.cli.MokamintNode \"\$@\" >> mokamint-node-print-logs \
  && chmod a+x mokamint-node-print-logs \
  && echo java --module-path /modules/explicit_or_automatic --class-path \"/modules/unnamed/*\" --module io.mokamint.node.cli/io.mokamint.node.cli.MokamintNode \"\$@\" >> mokamint-node \
  && chmod a+x mokamint-node \
  && echo java -Djava.util.logging.config.file=logging.properties --module-path /modules/explicit_or_automatic --class-path \"/home/mokamint/:/modules/unnamed/*\" --module io.mokamint.plotter.cli/io.mokamint.plotter.cli.MokamintPlotter \"\$@\" >> mokamint-plotter-print-logs \
  && chmod a+x mokamint-plotter-print-logs \
  && echo java --module-path /modules/explicit_or_automatic --class-path \"/modules/unnamed/*\" --module io.mokamint.plotter.cli/io.mokamint.plotter.cli.MokamintPlotter \"\$@\" >> mokamint-plotter \
  && chmod a+x mokamint-plotter

# install the control scripts
COPY src/main/docker/entries/* ./
RUN chmod 755 info && chmod 755 config-miner && chmod 755 mine

USER mokamint
WORKDIR /home/mokamint

# install the logging configuration that prints logs on the screen
COPY --chown=mokamint src/main/resources/logging.properties logging.properties

# create the directories for the miner configuration, that might be bound to some volume
RUN mkdir miner_configuration

# by default, print an info message
CMD ["info"]